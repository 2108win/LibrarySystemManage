/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package components;

import dao.BooksDao;
import dao.IssueBookDao;
import model.IssueBook;

import java.util.Date;

import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author winlax
 */
public class ViewRecordsPage extends javax.swing.JInternalFrame {

    /**
     * Creates new form HomePageData
     */
    String book_name, author, student_name, branch, year, status;
    int book_id, quantity, student_id, issue_id;
    Date issue_date, due_date;
    DefaultTableModel model;

    public ViewRecordsPage() {
        initComponents();
        // set border null
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        setIssueBookPending();
        setIssueBookReturned();
    }

    // public void setIssueBookDetails() {
    // IssueBookDao issueBookDao = new IssueBookDao();
    // model = (DefaultTableModel) issueBookPendingTable.getModel();
    // model.setRowCount(0);
    // for (IssueBook issueBook : issueBookDao.getAllIssueBooks()) {
    // IssueBook iBook = new IssueBook();
    // double fee_pending =
    // iBook.calculateFee(BooksDao.getBookFee(issueBook.getBook_id()),
    // issueBook.getDue_date());
    // issueBookDao.updateIssueFee(issueBook.getIssue_id(), fee_pending);
    // model.addRow(new Object[] {
    // issueBook.getIssue_id(), issueBook.getBook_id(), issueBook.getBook_name(),
    // issueBook.getStudent_id(), issueBook.getStudent_name(),
    // issueBook.getIssue_date(),
    // issueBook.getDue_date(), issueBook.getStatus()
    // });
    // }
    // }

    public void setIssueBookPending() {
        IssueBookDao issueBookDao = new IssueBookDao();
        model = (DefaultTableModel) issueBookPendingTable.getModel();
        model.setRowCount(0);
        for (IssueBook issueBook : issueBookDao.getAllIssueBooks()) {
            if (issueBook.getStatus().equals("Pending") || issueBook.getStatus().equals("Overdue")) {
                model.addRow(new Object[] {
                        issueBook.getIssue_id(), issueBook.getBook_name(),
                        issueBook.getStudent_name(), issueBook.getIssue_fee()
                });
            }
        }
    }

    public void setIssueBookReturned() {
        IssueBookDao issueBookDao = new IssueBookDao();
        model = (DefaultTableModel) issueBookReturnTable.getModel();
        model.setRowCount(0);
        for (IssueBook issueBook : issueBookDao.getAllIssueBooks()) {
            if (issueBook.getStatus().equals("Returned")) {
                model.addRow(new Object[] {
                        issueBook.getIssue_id(), issueBook.getBook_name(),
                        issueBook.getStudent_name(), issueBook.getIssue_fee()
                });
            }
        }
    }

    // public void filterStatus(String query) {
    // TableRowSorter<DefaultTableModel> tr = new
    // TableRowSorter<DefaultTableModel>(model);
    // IssueBookDetailsTable.setRowSorter(tr);
    // tr.setRowFilter(RowFilter.regexFilter(query, 7));
    // }

    // public void filterFromDateToDate(String query) {
    // TableRowSorter<DefaultTableModel> tr = new
    // TableRowSorter<DefaultTableModel>(model);
    // IssueBookDetailsTable.setRowSorter(tr);
    // tr.setRowFilter(RowFilter.regexFilter(query, 5));
    // }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel2 = new com.k33ptoo.components.KGradientPanel();
        panelBorder6 = new components.PanelBorder();
        jScrollPane5 = new javax.swing.JScrollPane();
        issueBookReturnTable = new rojeru_san.complementos.RSTableMetro();
        jLabel27 = new javax.swing.JLabel();
        panelBorder5 = new components.PanelBorder();
        jScrollPane4 = new javax.swing.JScrollPane();
        issueBookPendingTable = new rojeru_san.complementos.RSTableMetro();
        jLabel26 = new javax.swing.JLabel();
        panelBorder2 = new components.PanelBorder();
        txt_Fee = new javax.swing.JLabel();
        txt_Status = new javax.swing.JLabel();
        studentNameLabel2 = new javax.swing.JLabel();
        txt_StudentName = new javax.swing.JLabel();
        txt_BookName = new javax.swing.JLabel();
        studentNameLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 0));
        setBorder(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setAlignmentX(0.0F);
        setAlignmentY(0.0F);
        setFocusable(false);
        setOpaque(true);
        setPreferredSize(new java.awt.Dimension(950, 730));
        setRequestFocusEnabled(false);
        setVerifyInputWhenFocusTarget(false);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        kGradientPanel2.setFont(new java.awt.Font("DVN-Poppins", 0, 14)); // NOI18N
        kGradientPanel2.setkBorderRadius(0);
        kGradientPanel2.setkEndColor(new java.awt.Color(204, 204, 204));
        kGradientPanel2.setkStartColor(new java.awt.Color(245, 246, 241));
        kGradientPanel2.setPreferredSize(new java.awt.Dimension(950, 730));
        kGradientPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelBorder6.setBackground(new java.awt.Color(255, 255, 255));
        panelBorder6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane5.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane5.setBorder(null);
        jScrollPane5.setForeground(new java.awt.Color(255, 255, 255));

        issueBookReturnTable.setForeground(new java.awt.Color(255, 255, 255));
        issueBookReturnTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "ID", "Book Name", "Student Name", "Fee Return"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        issueBookReturnTable.setToolTipText("");
        issueBookReturnTable.setAlignmentX(0.0F);
        issueBookReturnTable.setAlignmentY(0.0F);
        issueBookReturnTable.setColorBackgoundHead(new java.awt.Color(255, 255, 255));
        issueBookReturnTable.setColorBordeFilas(new java.awt.Color(255, 255, 255));
        issueBookReturnTable.setColorBordeHead(new java.awt.Color(255, 255, 255));
        issueBookReturnTable.setColorFilasBackgound1(new java.awt.Color(245, 246, 241));
        issueBookReturnTable.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        issueBookReturnTable.setColorFilasForeground1(new java.awt.Color(36, 36, 36));
        issueBookReturnTable.setColorFilasForeground2(new java.awt.Color(36, 36, 36));
        issueBookReturnTable.setColorForegroundHead(new java.awt.Color(36, 36, 36));
        issueBookReturnTable.setColorSelBackgound(new java.awt.Color(255, 204, 204));
        issueBookReturnTable.setColorSelForeground(new java.awt.Color(36, 36, 36));
        issueBookReturnTable.setDragEnabled(true);
        issueBookReturnTable.setFont(new java.awt.Font("DVN-Poppins", 0, 18)); // NOI18N
        issueBookReturnTable.setFuenteFilas(new java.awt.Font("DVN-Poppins", 0, 14)); // NOI18N
        issueBookReturnTable.setFuenteFilasSelect(new java.awt.Font("DVN-Poppins", 1, 14)); // NOI18N
        issueBookReturnTable.setFuenteHead(new java.awt.Font("DVN-Poppins", 0, 14)); // NOI18N
        issueBookReturnTable.setGridColor(new java.awt.Color(255, 255, 255));
        issueBookReturnTable.setRowHeight(34);
        issueBookReturnTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        issueBookReturnTable.setSelectionForeground(new java.awt.Color(255, 255, 255));
        issueBookReturnTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        issueBookReturnTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                issueBookReturnTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(issueBookReturnTable);
        if (issueBookReturnTable.getColumnModel().getColumnCount() > 0) {
            issueBookReturnTable.getColumnModel().getColumn(0).setMaxWidth(50);
            issueBookReturnTable.getColumnModel().getColumn(3).setMinWidth(100);
            issueBookReturnTable.getColumnModel().getColumn(3).setMaxWidth(100);
        }

        panelBorder6.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 410, 530));

        jLabel27.setBackground(new java.awt.Color(36, 36, 36));
        jLabel27.setFont(new java.awt.Font("DVN-Poppins", 0, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(102, 102, 102));
        jLabel27.setText("Return List");
        panelBorder6.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        kGradientPanel2.add(panelBorder6, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 110, 450, 600));

        panelBorder5.setBackground(new java.awt.Color(255, 255, 255));
        panelBorder5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane4.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane4.setBorder(null);
        jScrollPane4.setForeground(new java.awt.Color(255, 255, 255));

        issueBookPendingTable.setForeground(new java.awt.Color(255, 255, 255));
        issueBookPendingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "ID", "Book Name", "Student Name", "Fee Pending"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        issueBookPendingTable.setToolTipText("");
        issueBookPendingTable.setAlignmentX(0.0F);
        issueBookPendingTable.setAlignmentY(0.0F);
        issueBookPendingTable.setColorBackgoundHead(new java.awt.Color(255, 255, 255));
        issueBookPendingTable.setColorBordeFilas(new java.awt.Color(255, 255, 255));
        issueBookPendingTable.setColorBordeHead(new java.awt.Color(255, 255, 255));
        issueBookPendingTable.setColorFilasBackgound1(new java.awt.Color(245, 246, 241));
        issueBookPendingTable.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        issueBookPendingTable.setColorFilasForeground1(new java.awt.Color(36, 36, 36));
        issueBookPendingTable.setColorFilasForeground2(new java.awt.Color(36, 36, 36));
        issueBookPendingTable.setColorForegroundHead(new java.awt.Color(36, 36, 36));
        issueBookPendingTable.setColorSelBackgound(new java.awt.Color(255, 204, 204));
        issueBookPendingTable.setColorSelForeground(new java.awt.Color(36, 36, 36));
        issueBookPendingTable.setDragEnabled(true);
        issueBookPendingTable.setFont(new java.awt.Font("DVN-Poppins", 0, 18)); // NOI18N
        issueBookPendingTable.setFuenteFilas(new java.awt.Font("DVN-Poppins", 0, 14)); // NOI18N
        issueBookPendingTable.setFuenteFilasSelect(new java.awt.Font("DVN-Poppins", 1, 14)); // NOI18N
        issueBookPendingTable.setFuenteHead(new java.awt.Font("DVN-Poppins", 0, 14)); // NOI18N
        issueBookPendingTable.setGridColor(new java.awt.Color(255, 255, 255));
        issueBookPendingTable.setRowHeight(34);
        issueBookPendingTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        issueBookPendingTable.setSelectionForeground(new java.awt.Color(255, 255, 255));
        issueBookPendingTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        issueBookPendingTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                issueBookPendingTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(issueBookPendingTable);
        if (issueBookPendingTable.getColumnModel().getColumnCount() > 0) {
            issueBookPendingTable.getColumnModel().getColumn(0).setMaxWidth(50);
            issueBookPendingTable.getColumnModel().getColumn(3).setMinWidth(100);
            issueBookPendingTable.getColumnModel().getColumn(3).setMaxWidth(100);
        }

        panelBorder5.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 400, 530));

        jLabel26.setBackground(new java.awt.Color(36, 36, 36));
        jLabel26.setFont(new java.awt.Font("DVN-Poppins", 0, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(102, 102, 102));
        jLabel26.setText("Pending List");
        panelBorder5.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        kGradientPanel2.add(panelBorder5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 440, 600));

        panelBorder2.setBackground(new java.awt.Color(255, 255, 255));
        panelBorder2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_Fee.setFont(new java.awt.Font("DVN-Poppins", 2, 16)); // NOI18N
        txt_Fee.setForeground(new java.awt.Color(0, 204, 0));
        txt_Fee.setText("0.0đ");
        txt_Fee.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(204, 204, 204)));
        panelBorder2.add(txt_Fee, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 20, 100, 30));

        txt_Status.setFont(new java.awt.Font("DVN-Poppins", 3, 16)); // NOI18N
        txt_Status.setForeground(new java.awt.Color(0, 204, 0));
        txt_Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_Status.setText("Status");
        txt_Status.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(204, 204, 204)));
        panelBorder2.add(txt_Status, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 20, 90, 30));

        studentNameLabel2.setFont(new java.awt.Font("DVN-Poppins", 2, 16)); // NOI18N
        studentNameLabel2.setText("--");
        panelBorder2.add(studentNameLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, 20, 30));

        txt_StudentName.setFont(new java.awt.Font("DVN-Poppins", 2, 16)); // NOI18N
        txt_StudentName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_StudentName.setText(" Student_name");
        txt_StudentName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(204, 204, 204)));
        panelBorder2.add(txt_StudentName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 230, 30));

        txt_BookName.setFont(new java.awt.Font("DVN-Poppins", 2, 16)); // NOI18N
        txt_BookName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_BookName.setText(" Book_name");
        txt_BookName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(204, 204, 204)));
        panelBorder2.add(txt_BookName, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, 360, 30));

        studentNameLabel3.setFont(new java.awt.Font("DVN-Poppins", 2, 16)); // NOI18N
        studentNameLabel3.setText("--");
        panelBorder2.add(studentNameLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 20, 20, 30));

        kGradientPanel2.add(panelBorder2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 910, 70));

        getContentPane().add(kGradientPanel2);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void issueBookPendingTableMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_issueBookPendingTableMouseClicked
        // TODO add your handling code here:
        int i = issueBookPendingTable.getSelectedRow();
        model = (DefaultTableModel) issueBookPendingTable.getModel();
        txt_StudentName.setText(model.getValueAt(i, 2).toString());
        txt_BookName.setText(model.getValueAt(i, 1).toString());
        IssueBookDao issueBookDao = new IssueBookDao();
        int issueBookId = Integer.parseInt(model.getValueAt(i, 0).toString());
        double fee = issueBookDao.getIssueFeeByIssueId(issueBookId);
        txt_Status.setText("Pending");
        txt_Status.setForeground(new java.awt.Color(255, 153, 153));
        txt_Fee.setForeground(new java.awt.Color(255, 153, 153));
        // pending và overdue thì color [255,153,153] , returned thì color [0,204,0]
        txt_Fee.setText(fee + " đ");
    }// GEN-LAST:event_issueBookPendingTableMouseClicked

    private void issueBookReturnTableMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_issueBookReturnTableMouseClicked
        // TODO add your handling code here:
        int i = issueBookReturnTable.getSelectedRow();
        model = (DefaultTableModel) issueBookReturnTable.getModel();
        txt_StudentName.setText(model.getValueAt(i, 2).toString());
        txt_BookName.setText(model.getValueAt(i, 1).toString());
        IssueBookDao issueBookDao = new IssueBookDao();
        int issueBookId = Integer.parseInt(model.getValueAt(i, 0).toString());
        double fee = issueBookDao.getIssueFeeByIssueId(issueBookId);
        txt_Status.setText("Returned");
        txt_Status.setForeground(new java.awt.Color(0, 204, 0));
        txt_Fee.setForeground(new java.awt.Color(0, 204, 0));
        // pending và overdue thì color [255,153,153] , returned thì color [0,204,0]
        txt_Fee.setText(fee + " đ");
    }// GEN-LAST:event_issueBookReturnTableMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojeru_san.complementos.RSTableMetro issueBookPendingTable;
    private rojeru_san.complementos.RSTableMetro issueBookReturnTable;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private com.k33ptoo.components.KGradientPanel kGradientPanel2;
    private components.PanelBorder panelBorder2;
    private components.PanelBorder panelBorder5;
    private components.PanelBorder panelBorder6;
    private javax.swing.JLabel studentNameLabel2;
    private javax.swing.JLabel studentNameLabel3;
    private javax.swing.JLabel txt_BookName;
    private javax.swing.JLabel txt_Fee;
    private javax.swing.JLabel txt_Status;
    private javax.swing.JLabel txt_StudentName;
    // End of variables declaration//GEN-END:variables
}
